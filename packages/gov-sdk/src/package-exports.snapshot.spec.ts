describe('built package exports', () => {
  it('should match snapshot', () => {
    // using require here to mimic how these files would be used from a js
    // environment and test the actual build output
    /* eslint-disable @typescript-eslint/no-var-requires */

    const pkg = require('../index.js');

    expect(Object.keys(pkg)).toMatchInlineSnapshot(`
      Array [
        "GovernanceSDK",
        "Protocol",
        "createRegistry",
        "ProtocolRegistry",
        "decodeCursor",
        "encodeCursor",
        "extractPage",
        "iteratePages",
        "bufferAsyncIterable",
        "TaggedTypeResolver",
        "errorCodes",
        "GovError",
        "isGovError",
        "validators",
        "ProposalState",
        "ProposalEvent",
        "ProposalEventPage",
        "Proposal",
        "ProposalPage",
        "Vote",
        "VotePage",
        "proposalsAdapterValidators",
        "treasuryAdapterValidators",
        "TokenInfo",
        "tokenAdapterValidators",
        "Icon",
        "IconInfo",
        "iconAdapterValidators",
        "CastVoteRequestId",
        "CastVoteEncodedResponse",
        "voteAdapterValidators",
        "VotePowerInfo",
        "BalanceInfo",
        "WalletMapInfo",
        "votePowerAdapterValidators",
        "DelegateVotingPowerRequestId",
        "EventType",
        "DelegationEvent",
        "DelegationEventPage",
        "DelegationsInfo",
        "DelegateAddress",
        "TokenAddress",
        "delegationAdapterValidators",
        "CreateProposalRequestId",
        "ProposalTimeFormat",
        "createProposalAdapterValidators",
        "CreateOnChainProposalRequestId",
        "ContractFunctions",
        "EncodedCallData",
        "createOnChainProposalAdapterValidators",
        "RequestId",
        "TimeDelay",
        "proposalExecutionAdapterValidators",
        "PodInfo",
        "PodList",
        "podAdapterValidators",
        "ExternalLink",
        "ChainId",
        "Network",
        "Framework",
        "AdapterInstanceType",
        "Address",
        "Addresses",
        "ContractAddress",
        "Currency",
        "CurrencyAmount",
        "Time",
        "compareTime",
        "TokenBalancesInfo",
        "CurrencyTokenBalancesInfo",
        "Transaction",
        "Transactions",
        "TransactionsResponse",
        "Transfer",
        "Transfers",
        "TransfersResponse",
        "FunctionsSelectors",
        "VoteFunctionsSelectors",
        "TransferEvent",
        "TransferEventPage",
        "generalAdapterValidators",
        "TransactionHash",
        "Allowance",
        "stakingAdapterValidators",
        "JsonRpcTransport",
        "HttpTransport",
        "IpfsTransport",
        "NetworkTransportResolver",
        "SignerTransport",
      ]
    `);
  });
});
