import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GnosisSafeProxy } from "../GnosisSafeProxy";
export declare class GnosisSafeProxy__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_masterCopy: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<GnosisSafeProxy>;
    getDeployTransaction(_masterCopy: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): GnosisSafeProxy;
    connect(signer: Signer): GnosisSafeProxy__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): GnosisSafeProxy;
}
